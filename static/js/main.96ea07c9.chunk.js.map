{"version":3,"sources":["components/Navigation.js","components/NotesList.js","components/CreateNote.js","components/CreateUser.js","components/Login.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","react_default","a","createElement","className","react_router_dom","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Component","NotesList","state","notes","user","getNotes","_callee","res","regenerator_default","wrap","_context","prev","next","localStorage","getItem","axios","get","concat","headers","Authorization","sent","data","window","location","href","_this","setState","stop","deleteNote","_callee2","noteId","_context2","delete","this","_this2","map","note","key","_id","src","imagen","alt","title","content","format","createdAt","onClick","config","bucketName","region","accessKeyId","secretAccessKey","CreateNote","pathfile","date","Date","userSelected","users","editing","onSubmit","e","updatedNote","newNote","preventDefault","author","put","post","onInputChange","Object","defineProperty","target","name","value","onImageChange","file","uploadFile","files","onChangeDate","props","match","params","console","log","placeholder","onChange","required","es","selected","CreateUser","username","email","password","getUsers","deleteUser","_callee3","userId","_context3","confirm","Login","removeItem","setItem","login","token","App","Navigation_Navigation","react_router","path","exact","component","Boolean","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.96ea07c9.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class Navigation extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark p-3\">\r\n                <div className=\"container\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">\r\n                        <i className=\"material-icons\">\r\n                            assignment </i> PostsApp\r\n                    </Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            <li className=\"nav-item active\">\r\n                                <Link to=\"/\" className=\"nav-link\">Login</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/user\" className=\"nav-link\">Registrar Usuario</Link>\r\n                            </li>\r\n                            <li className=\"nav-item active\">\r\n                                <Link to=\"/notelist\" className=\"nav-link\">Posts</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/create\" className=\"nav-link\">Crear Post</Link>\r\n                            </li>\r\n                            \r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport { format } from 'timeago.js'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n\r\nexport default class NotesList extends Component {\r\n\r\n    state = {\r\n        notes: [], \r\n        user:''\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.getNotes();\r\n    }\r\n\r\n    getNotes = async () => {\r\n        const id =  localStorage.getItem('login_id')\r\n        const res = await axios.get(`http://localhost:4000/api/notes?id=${id}`, {\r\n            headers: {\r\n              Authorization: localStorage.getItem('token')\r\n            }\r\n           })\r\n        if (res.data===false) {\r\n           window.location.href = '/';\r\n            \r\n        }else{\r\n            this.setState({\r\n                notes: res.data,\r\n                user : localStorage.getItem('email')\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    deleteNote = async (noteId) => {\r\n        await axios.delete('http://localhost:4000/api/notes/' + noteId, {\r\n            headers: {\r\n              Authorization: localStorage.getItem('token')\r\n            }\r\n           });\r\n        this.getNotes();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                {\r\n                    this.state.notes.map(note => (\r\n                        <div className=\"col-md-4 p-2\" key={note._id}>\r\n                            <img className=\"card-img-top\" src={note.imagen} alt=\"Card image\"></img>\r\n                            <div className=\"card\">\r\n                                \r\n                                <div className=\"card-header d-flex justify-content-between\">\r\n                                    <h5>{note.title}</h5>\r\n                                    <Link to={\"/edit/\" + note._id} className=\"btn btn-secondary\">\r\n                                        <i className=\"material-icons\">\r\n                                            border_color</i>\r\n                                    </Link>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                   \r\n                                    \r\n                                    <p>\r\n                                        Contenido: {note.content}\r\n                                    </p>\r\n                                    <p>\r\n                                        Author: {this.state.user}\r\n                                    </p>\r\n                                    <p>\r\n                                        {format(note.createdAt)}\r\n                                    </p>\r\n                                </div>\r\n                                <div className=\"card-footer\">\r\n                                    <button className=\"btn btn-danger\" onClick={() => this.deleteNote(note._id)}>\r\n                                        Delete\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport axios from 'axios'\r\nimport { uploadFile } from 'react-s3';\r\n\r\nconst config = {\r\n    bucketName: 'testnew123',\r\n    //dirName: 'testing/test1/', /* optional */\r\n    region: 'us-east-1',\r\n    accessKeyId: 'AKIAIDGLPACSWDKQYI2Q',\r\n    secretAccessKey: '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',\r\n}\r\n\r\nexport default class CreateNote extends Component {\r\n\r\n    state = {\r\n        title: '',\r\n        content: '',\r\n        imagen: '',\r\n        pathfile: '',\r\n        date: new Date(),\r\n        userSelected: '',\r\n        users: [],\r\n        editing: false,\r\n        _id: ''\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        if (!localStorage.getItem('token')) {\r\n            window.location.href = '/';\r\n        }else{\r\n            if (this.props.match.params.id) {\r\n                console.log(this.props.match.params.id)\r\n                const res = await axios.get('http://localhost:4000/api/notes/' + this.props.match.params.id, {\r\n                    headers: {\r\n                      Authorization: localStorage.getItem('token')\r\n                    }\r\n                   });\r\n                console.log(res.data)\r\n                this.setState({\r\n                    title: res.data.title,\r\n                    content: res.data.content,\r\n                    date: new Date(res.data.date),\r\n                    userSelected: res.data.author,\r\n                    _id: res.data._id,\r\n                    editing: true\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (this.state.editing) {\r\n            const updatedNote = {\r\n                title: this.state.title,\r\n                content: this.state.content,\r\n                author: localStorage.getItem('login_id'),\r\n                date: this.state.date,\r\n                imagen: this.state.pathfile\r\n            };\r\n            await axios.put('http://localhost:4000/api/notes/' + this.state._id, updatedNote, {\r\n                headers: {\r\n                  Authorization: localStorage.getItem('token')\r\n                }\r\n               });\r\n        } else {\r\n            const newNote = {\r\n                title: this.state.title,\r\n                content: this.state.content,\r\n                author: localStorage.getItem('login_id'),\r\n                date: this.state.date,\r\n                imagen: this.state.pathfile\r\n            };\r\n            axios.post('http://localhost:4000/api/notes', newNote, {\r\n                headers: {\r\n                  Authorization: localStorage.getItem('token')\r\n                }\r\n               });\r\n        }\r\n        window.location.href = '/notelist';\r\n\r\n    }\r\n\r\n    onInputChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    onImageChange = async (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n       const file = await uploadFile(e.target.files[0], config)\r\n       this.setState({\r\n        pathfile: file.location\r\n        })\r\n    \r\n    }\r\n\r\n    onChangeDate = date => {\r\n        this.setState({ date });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-md-6 offset-md-3\">\r\n                <div className=\"card card-body\">\r\n                    <h4>Crear un Post</h4>\r\n                    <form onSubmit={this.onSubmit}>\r\n                        {/* Note Title */}\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Titulo\"\r\n                                onChange={this.onInputChange}\r\n                                name=\"title\"\r\n                                value={this.state.title}\r\n                                required />\r\n                        </div>\r\n                        {/* Note Content */}\r\n                        <div className=\"form-group\">\r\n                            <textarea\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contenido\"\r\n                                name=\"content\"\r\n                                onChange={this.onInputChange}\r\n                                value={this.state.content}\r\n                                required>\r\n                            </textarea>\r\n                        </div>\r\n\r\n                         {/* Note Date */}\r\n                         <div className=\"form-group\">\r\n                            <DatePicker className=\"form-control\" selected={this.state.date} onChange={this.onChangeDate} />\r\n                        </div>\r\n                          {/* Note Imagen */}\r\n                          <div className=\"form-group\">\r\n                            <input\r\n                                type=\"file\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Imagen\"\r\n                                onChange={this.onImageChange}\r\n                                name=\"imagen\"\r\n                                value={this.state.imagen}\r\n                                required />\r\n                        </div>\r\n                        <button className=\"btn btn-primary\">\r\n                            Save <i className=\"material-icons\">\r\n                                assignment\r\n</i>\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\n\r\nexport default class CreateUser extends Component {\r\n\r\n    state = {\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        users: []\r\n    }\r\n\r\n    async componentDidMount() {\r\n        //this.getUsers();\r\n    }\r\n\r\n    getUsers = async () => {\r\n        const res = await axios.get('http://localhost:4000/api/users');\r\n        this.setState({\r\n            users: res.data\r\n        });\r\n    }\r\n\r\n    onInputChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const res = await axios.post('http://localhost:4000/api/users', {\r\n            username: this.state.username,\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        });\r\n        if(res.data===true){\r\n            this.setState({ username: '',email: '', password: '' });\r\n            window.location.href = '/';\r\n        }else{\r\n            console.log('email ya existe');\r\n        }\r\n        \r\n    }\r\n\r\n    deleteUser = async (userId) => {\r\n        const response = window.confirm('are you sure you want to delete it?');\r\n        if (response) {\r\n            await axios.delete('http://localhost:4000/api/users/' + userId);\r\n            this.getUsers();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-md-6 offset-md-3\">\r\n                <div className=\"card card-body\">\r\n                    <h4>Registrar Usuario</h4>\r\n                    <form onSubmit={this.onSubmit}>\r\n                        {/* Note Title */}\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre de usuario\"\r\n                                onChange={this.onInputChange}\r\n                                name=\"username\"\r\n                                value={this.state.username}\r\n                                required />\r\n                        </div>\r\n                        {/* Note Title */}\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Email\"\r\n                                onChange={this.onInputChange}\r\n                                name=\"email\"\r\n                                value={this.state.email}\r\n                                required />\r\n                        </div>\r\n                        {/* Note Content */}\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Password\"\r\n                                name=\"password\"\r\n                                onChange={this.onInputChange}\r\n                                value={this.state.password}\r\n                                required/>\r\n                        </div>\r\n                        \r\n                        <button className=\"btn btn-primary\">\r\n                            Registrar <i className=\"material-icons\">\r\n                                assignment\r\n</i>\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport axios from 'axios'\r\n\r\nexport default class Login extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        date: new Date(),\r\n        userSelected: '',\r\n        users: [],\r\n        editing: false,\r\n        _id: ''\r\n    }\r\n\r\n    async componentDidMount() {\r\n       /*  const res = await axios.get('http://localhost:4000/api/users');\r\n        if (res.data.length > 0) {\r\n            this.setState({\r\n                users: res.data.map(user => user.username),\r\n                userSelected: res.data[0].username\r\n            })\r\n        }\r\n        if (this.props.match.params.id) {\r\n            console.log(this.props.match.params.id)\r\n            const res = await axios.get('http://localhost:4000/api/notes/' + this.props.match.params.id);\r\n            console.log(res.data)\r\n            this.setState({\r\n                title: res.data.title,\r\n                content: res.data.content,\r\n                date: new Date(res.data.date),\r\n                userSelected: res.data.author,\r\n                _id: res.data._id,\r\n                editing: true\r\n            });\r\n        } */\r\n    }\r\n\r\n    onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const res = await axios.post('http://localhost:4000/api/users/login', {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        });\r\n       if (res.data===false) {\r\n           console.log('usuario no valido');\r\n           if (localStorage.getItem('token') ) {\r\n            localStorage.removeItem('token')\r\n            localStorage.removeItem('login_id')\r\n            localStorage.removeItem('email')\r\n           }\r\n    }else{\r\n        console.log(res.data);\r\n        localStorage.setItem('token', `${res.data.login[0].email} ${res.data.token}`)\r\n        localStorage.setItem('login_id', `${res.data.login[0]._id}`)\r\n        localStorage.setItem('email', `${res.data.login[0].email}`)\r\n        window.location.href = '/notelist';\r\n       }\r\n        \r\n\r\n    }\r\n\r\n    onInputChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n   \r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-md-6 offset-md-3\">\r\n                <div className=\"card card-body\">\r\n                    <h4>Inicair Sesión</h4>\r\n                    <form onSubmit={this.onSubmit}>\r\n                        {/* Note Title */}\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Email\"\r\n                                onChange={this.onInputChange}\r\n                                name=\"email\"\r\n                                value={this.state.email}\r\n                                required />\r\n                        </div>\r\n                        {/* Note Content */}\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Password\"\r\n                                name=\"password\"\r\n                                onChange={this.onInputChange}\r\n                                value={this.state.password}\r\n                                required/>\r\n                        </div>\r\n                        \r\n                        <button className=\"btn btn-primary\">\r\n                            Login <i className=\"material-icons\">\r\n                                send\r\n</i>\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\n\r\nimport Navigation from './components/Navigation'\r\nimport NotesList from './components/NotesList'\r\nimport CreateNote from './components/CreateNote'\r\nimport CreateUser from './components/CreateUser'\r\nimport Login from './components/Login'\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Navigation />\r\n      <div className=\"container p-4\">\r\n        <Route path=\"/\" exact component={Login} />\r\n        <Route path=\"/user\" component={CreateUser} />\r\n        <Route path=\"/notelist\" component={NotesList} />\r\n        <Route path=\"/edit/:id\" component={CreateNote} />\r\n        <Route path=\"/create\" component={CreateNote} />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}